<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
        <!-- 启用默认servlet -->
        <mvc:default-servlet-handler/>
        <!-- 注册扫描器，扫描Controller层 -->
        <context:component-scan base-package="cn.lexed.controller"/>
        
        <!--  打开springmvc的注解模式mvc 请求映射 处理器与适配器配置 -->
        <!--   解决动态资源和静态资源冲突的问题  -->
	    <mvc:annotation-driven>
	       <mvc:message-converters>
		 	 <!-- 字符串转换器 -->
		 		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		 			<property name="supportedMediaTypes">
		 				<list>
		 					<value>application/json;charset=UTF-8</value>
		 				</list>
		 			</property>
		 		</bean> 
			</mvc:message-converters> 
	    </mvc:annotation-driven> 
	    
           <!-- 配置视图解析器-->
	    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
               <property name="prefix" value="/WEB-INF/jsp/"></property>
               <property name="suffix" value=".jsp"></property>
        </bean>
         
         <!-- 配置静态资源 -->  
	    <!-- location 表示静态资源所在目录。当然，目录不要使用/WEB-INF/及其子目录。
             mapping 表 示 对 该 资 源 的 请 求 
                       （ 以 /images/ 开 始 的 请 求 ， 如 /image/beauty.jpg , /images/car.png 等）。注意，后面是两个星号**。 -->
	    <mvc:resources location="/static/" mapping="/static/**"></mvc:resources>
	
        <!-- 声明拦截器拦截器 -->
        <mvc:interceptors>
             <mvc:interceptor>
                 <!--
                 <mvc:mapping/>用于指定当前所注册的拦截器可以拦截的请求路径，而/**表示拦截所有请求。
                  path：就是uri地址，可以使用通配符 **
                     ** ： 表示任意的字符，文件或者多级目录和目录中的文件
                                          声明拦截器对象:   <bean class="cn.kgc.interceptor.LoginInterceptor" />
                   <mvc:exclude-mapping path="/user/view"/>:  设置不拦截
                   -->
                 <mvc:mapping path="/**"/>
                 <mvc:exclude-mapping path="/user/view"/>
                 <mvc:exclude-mapping path="/user/login"/>
                 <mvc:exclude-mapping path="/user/gotext"/>
                 <mvc:exclude-mapping path="/user/returntext"/>
                 <bean class="cn.lexed.interceptor.LoginInterceptor"/>
             </mvc:interceptor>
        </mvc:interceptors>
        
        
        <!-- 全局异常处理
         使用 SimpleMappingExceptionResolver 
         进行异常处理，具有集成简单、有良好的扩展性、对代码没有入侵性等优点，
         但该方法仅能获取到异常信息，若在出现异常时，对需要获取除异常以外的数据的情况不适用。
         -->
        <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
               <property name="exceptionMappings">
						<props>
							<prop key="java.lang.RuntimeException">error</prop>
						</props>
            </property>
       </bean>
       
       
        
</beans>
